- name: ==== Mise en place du proxy NGINX ====
  hosts: proxy
  become: true
#  vars_files:
#    - <path>

  tasks:
    - name: ___Installation du service NGINX___
      apt:
        name: nginx
        state: present
        update_cache: true

    - name: ___Arrêt du service NGINX___
      service:
        name: nginx
        state: stopped
        enabled: true
    
    - name: ___Création de différents fichiers___
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /home/formation/wordpress
        - /home/formation/git
        - /var/www/landing_page
        - /home/formation/scripts

    - name: ___Copie de l'index.html___
      copy:
        src: ./index/index.html
        dest: /var/www/landing_page/index.html
        owner: formation
        group: formation
        mode: 0644

    - name: ___Copie des fichiers de configuration___
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: formation
        group: formation
        mode: 0644
      loop:
        - src: ./wordpress/conf.d/wordpress.conf
          dest: /etc/nginx/sites-available/wordpress.conf
        - src: ./git/conf.d/git.conf
          dest: /etc/nginx/sites-available/git.conf
        - src: ./index/conf.d/index.conf
          dest: /etc/nginx/sites-available/index.conf

    - name: ___Copie du script CERTBOT___
      copy:
        src: ./scripts/certbot_installation_script.sh
        dest: /home/formation/scripts/certbot_installation_script.sh
        owner: formation
        group: formation
        mode: 0644

    - name: ___Copie du cron CERTBOT___
      copy:
        src: ./cron.d/cron_certbot_renew_60days
        dest: /etc/cron.d/cron_certbot_renew_60days
        owner: formation
        group: formation
        mode: 0644

    - name: ___Création du fichier renew.log___
      command: sudo touch /var/log/letsencrypt/renew.log

#    - name: ___Lecture du scipt CERTBOT___
#      script: /home/formation/scripts/certbot_installation_script.sh

    - name: ___Activation des fichiers de configuration___
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - src: /etc/nginx/sites-available/wordpress.conf
          dest: /etc/nginx/sites-enabled/wordpress.conf
        - src: /etc/nginx/sites-available/git.conf
          dest: /etc/nginx/sites-enabled/git.conf
        - src: /etc/nginx/sites-available/index.conf
          dest: /etc/nginx/sites-enabled/index.conf

    #- name: ___Installation et création de certificat CERTBOT___

    - name: ___Désactivation de la configuration NGINX par défaut (default.conf)___
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: ___Redemarrage du service NGINX___
      service:
        name: nginx
        state: started

- name: ==== Mise en place de MYSQL ====
  hosts: db
  become: true

  tasks:
    - name: ___Installation de docker___
      shell: |
        sudo apt-get update
        sudo apt-get install curl
        curl -fsSL https://get.docker.com/ | sh
        sudo usermod -aG docker formation
      args:
        executable: /bin/bash
    
    - name: ___Installation de docker-compose___
      shell: |
        sudo curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: ___Création du fichier database_users dans le home directory___
      file:
        path: /home/formation/database_users
        state: directory

    - name: ___Création de différents fichiers___
      file:
        path: /home/formation/volume
        state: directory

    - name: ___copie du fichier docker-compose___
      copy:
        src: ./mysql/docker-compose.yml
        dest: /home/formation/docker-compose.yml
        owner: formation
        group: formation
        mode: 0644

    - name: ___copie du fichier databases.sql___
      copy:
        src: ./mysql/database/databases.sql
        dest: /home/formation/database_users/databases.sql
        owner: formation
        group: formation
        mode: 0644

    - name: ___Lancement du docker-compose___
      command: sudo docker-compose up -d
      args:
        chdir: /home/formation/

- name: ==== Mise en place de WORDPRESS avec docker-compose ====
  hosts: web
  become: true

  tasks:
    - name: ___Installation de docker___
      shell: |
        sudo apt-get update
        sudo apt-get install curl
        curl -fsSL https://get.docker.com/ | sh
        sudo usermod -aG docker debian
    
    - name: ___Installation de docker-compose___
      shell: |
        sudo curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: ___Copie du fichier docker-compose___
      copy:
        src: ./wordpress/docker-compose.yml
        dest: /home/debian/docker-compose.yml
        mode: 0644

    - name: ___Lancement du docker-compose___
      command: sudo docker-compose up -d
      args:
        chdir: /home/debian/

- name: ==== Mise en place de GITEA avec docker-compose ====
  hosts: git
  become: true

  tasks:
    - name: ___Installation de docker___
      shell: |
        sudo apt-get update
        sudo apt-get install curl
        curl -fsSL https://get.docker.com/ | sh
        sudo usermod -aG docker formation
    
    - name: ___Installation de docker-compose___
      shell: |
        sudo curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: ___Création du fichier git dans le home directory___
      file:
        path: /home/formation/git
        state: directory

    - name: ___Copie du fichier docker-compose___
      copy:
        src: ./git/docker-compose.yml
        dest: /home/formation/docker-compose.yml
        mode: 0644

    - name: ___Lancement du docker-compose___
      command: sudo docker-compose up -d
      args:
        chdir: /home/formation/